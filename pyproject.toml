[tool.black]
line-length = 120
exclude = '''
/(
      \.eggs
    | \.git
    | \.mypy_cache
    | venv
  )/
'''

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
lines_after_imports = 2
skip_gitignore = true

[tool.pytest.ini_options]
python_files = "test_*.py"
addopts = "--strict-markers --disable-pytest-warnings"

[tool.poetry]
name = "image_search"
version = "0.1.0"
description = ""
authors = ["modulabs nlp-forge-lab <ekdub92@naver.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
torch = { version = "^2.4.1", optional = true }
torchvision = { version="^0.19.1", optional = true }
transformers = "^4.44.2"
pillow = "^10.4.0"
smart-open = "^7.0.4"
elasticsearch = "^8.15.1"
streamlit = "^1.38.0"
pandas = "^2.2.2"
tqdm = "^4.66.5"
setuptools = "^74.1.2"
fastapi = {extras = ["standard"], version = "^0.114.1"}
pytest = "^8.3.3"
python-dotenv = "^1.0.1"

[tool.poetry.group.cpu]
optional = true

[tool.poetry.group.cpu.dependencies]
torch = { version = "^2.2.1", source = "torch_cpu", markers = "extra=='cpu' and extra!='gpu'" }
torchvision = { version="^0.19.1", source = "torch_cpu", markers = "extra=='cpu' and extra!='gpu'" }

[tool.poetry.group.gpu]
optional = true

[tool.poetry.group.gpu.dependencies]
torch = { version = "^2.2.1", source = "torch_cuda", markers = "extra=='gpu' and extra!='cpu'" }
torchvision = { version="^0.19.1", source = "torch_cuda", markers = "extra=='gpu' and extra!='cpu'" }

[tool.poetry.extras]
cpu = ["torch", "torchvision"]
gpu = ["torch", "torchvision"]

[[tool.poetry.source]]
name = "torch_cpu"
url = "https://download.pytorch.org/whl/cpu"
priority = "explicit"

[[tool.poetry.source]]
name = "torch_cuda"
url = "https://download.pytorch.org/whl/cu118"
priority = "explicit"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
